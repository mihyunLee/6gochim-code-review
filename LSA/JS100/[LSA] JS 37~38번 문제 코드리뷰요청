//# 문제37 : 반장 선거

//새 학기를 맞아 호준이네 반은 반장 선거를 하기로 했습니다.
//그런데 표를 하나씩 개표하는 과정이 너무 번거롭게 느껴진 당신은 **학생들이 뽑은 후보들을 입력받으면 뽑힌 학생의 이름과 받은 표 수를 출력하는 프로그램**을 작성하기로 하였습니다.

//입력
//미현 수정 슬아 유송 선호 석형 종미 수정 수정

//출력
//수정이가 총 3표로 반장이 되었습니다.

const head = [
  "미현",
  "수정",
  "슬아",
  "유송",
  "선호",
  "석형",
  "종미",
  "수정",
  "수정",
];

//객체로 만들어준다
let result = {};
let winner = "";

//index는 0에서 모든 원소를 순환할때까지 증가한다
for (let index in head) {
  let value = head[index];
  result[value] =
    result[value] === undefined ? 1 : (result[value] = result[value] + 1);
}

console.log(result);
//result[val] === undefined ?
//result[val] === undefined 가 true라면 값은 1이고 아니라면 result[value] + 1

//0이라면 처음은 미현이니까 미현이가 value값으로 들어간다
//{미현 : undefined}  result[value] === undefined true이므로 1을 반환
//{미현: 1}
//1이 되었으니까 result[value] = result[value] + 1;

//keys()들어가는 매개변수의 key값만 배열로 반환
//reduce()배열의 매서드
//key값으로 만든 배열의 값들의 원소를 하나하나 순회하면서 a와 b에 대입
//안에 작성한 함수를  a에게 중첩
//즉 b가 a로 다시 들어가서 중첩된다
//두번째 순환에서 a는 수정이가 된다

console.log(result);
winner = Object.keys(result).reduce(function (a, b) {
  console.log(a, b);
  return result[a] > result[b] ? a : b;
});
console.log(winner);
alert( `${winner}이가 총 ${result[winner]}표로 반장이 되었습니다✨`);


//# 문제38 : 호준이의 아르바이트

//호준이는 아르바이트로 영어 학원에서 단어 시험지를 채점하는 일을 하고 있다. 호준이가 일하는 학원은 매번 1위부터 3위까지의 학생에게 상으로 사탕을 준다. 그런데 오늘은 마침 사탕이 다 떨어져서 호준이가 채점을 하고 점수를 보내면, 당신이 아이들의 숫자만큼 사탕을 사러 가기로 했다.

//1위 ~ 3위 학생은 여러명일 수 있고 1~3위 학생 중 중복되는 학생까지 포함하여 사탕을 사기로 한다.
//**학생들의 점수를 공백으로 구분하여 입력을 받고 사탕을 받을 학생의 수를 출력하세요.**

//입출력

//입력 : 97 86 75 66 55 97 85 97 97 95
//출력 : 6

//오름차순으로 정렬
//sort() 메서드는 배열의 요소를 적절한 위치에 정렬한 후 그 배열을 반환합니다
// a - b 오름차순
// b - a 내림차순

const candy = ["97", "86", "75", "66", "55", "97", "85", "97", "97", "95"];
candy.sort(function (a, b) {
  return a - b;
});

console.log(candy);
//(10) ['55', '66', '75', '85', '86', '95', '97', '97', '97', '97']

let top3 = [];
let count = 0;

//3등까지 순환
while (top3.length < 3) {
  let value = candy.pop();
  if (!top3.includes(value)) {
    top3.push(value);
  }
  count++;
  //동점까지 포함해야하니 사용
}
console.log(top3);
//(3) ['97', '95', '86']
console.log(count);

//candy.pop(); = candy배열의 원소 제일 끝에 있는 원소를 밖으로 빼서 반환 후 value안에 넣는다
//pop으로 뽑힌 원소는  top3안에 들어가고 top3가 길이가 3이 되는 순간 while문은 종료가 된다
//includes(value)배열 원소중에 value값이 있다면 true 없다면 false를 반환해주는 함수
//if (!top3.includes(value)){} = top3안에 value값이 없다면 top3.push(value); 원소를 넣어줘라



